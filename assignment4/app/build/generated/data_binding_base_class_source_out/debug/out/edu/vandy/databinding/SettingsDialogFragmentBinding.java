// Generated by view binder compiler. Do not edit!
package edu.vandy.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.GridLayout;
import android.widget.LinearLayout;
import android.widget.SeekBar;
import android.widget.Spinner;
import android.widget.Switch;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import edu.vandy.R;
import io.apptik.widget.MultiSlider;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class SettingsDialogFragmentBinding implements ViewBinding {
  @NonNull
  private final GridLayout rootView;

  @NonNull
  public final GridLayout gridLayout;

  @NonNull
  public final TextView settingsAnimationSpeedLabel;

  @NonNull
  public final LinearLayout settingsAnimationSpeedLayout;

  @NonNull
  public final SeekBar settingsAnimationSpeedSeekBar;

  @NonNull
  public final TextView settingsAnimationSpeedValue;

  @NonNull
  public final TextView settingsAppearanceGroup;

  @NonNull
  public final Switch settingsAutoScale;

  @NonNull
  public final Spinner settingsBeingManagerType;

  @NonNull
  public final TextView settingsBeingManagerTypeLabel;

  @NonNull
  public final TextView settingsBeingSizeLabel;

  @NonNull
  public final LinearLayout settingsBeingSizeLayout;

  @NonNull
  public final SeekBar settingsBeingSizeSeekBar;

  @NonNull
  public final TextView settingsBeingSizeValue;

  @NonNull
  public final Spinner settingsBeingSprite;

  @NonNull
  public final TextView settingsBeingsLabel;

  @NonNull
  public final LinearLayout settingsBeingsLayout;

  @NonNull
  public final SeekBar settingsBeingsSeekBar;

  @NonNull
  public final TextView settingsBeingsValue;

  @NonNull
  public final TextView settingsGazingDurationLabel;

  @NonNull
  public final LinearLayout settingsGazingDurationLayout;

  @NonNull
  public final TextView settingsGazingDurationMinValue;

  @NonNull
  public final MultiSlider settingsGazingDurationSeekBar;

  @NonNull
  public final TextView settingsGazingDurationValue;

  @NonNull
  public final TextView settingsIterationsLabel;

  @NonNull
  public final LinearLayout settingsIterationsLayout;

  @NonNull
  public final SeekBar settingsIterationsSeekBar;

  @NonNull
  public final TextView settingsIterationsValue;

  @NonNull
  public final Switch settingsLogging;

  @NonNull
  public final Switch settingsModelChecker;

  @NonNull
  public final TextView settingsModelCheckerLabel;

  @NonNull
  public final TextView settingsModelParametersGroup;

  @NonNull
  public final TextView settingsPalantirLabel;

  @NonNull
  public final LinearLayout settingsPalantirLayout;

  @NonNull
  public final TextView settingsPalantirManagerTypeLabel;

  @NonNull
  public final SeekBar settingsPalantirSeekBar;

  @NonNull
  public final TextView settingsPalantirSizeLabel;

  @NonNull
  public final LinearLayout settingsPalantirSizeLayout;

  @NonNull
  public final SeekBar settingsPalantirSizeSeekBar;

  @NonNull
  public final TextView settingsPalantirSizeValue;

  @NonNull
  public final TextView settingsPalantirValue;

  @NonNull
  public final Spinner settingsPalantiriManagerType;

  @NonNull
  public final TextView settingsPanel;

  @NonNull
  public final Switch settingsPerformanceMode;

  @NonNull
  public final TextView settingsPerformanceModeLabel;

  @NonNull
  public final Button settingsResetToDefaults;

  @NonNull
  public final Switch settingsSaveOnExit;

  @NonNull
  public final TextView settingsScalingGroup;

  @NonNull
  public final Switch settingsShowPaths;

  @NonNull
  public final Switch settingsShowProgress;

  @NonNull
  public final Switch settingsShowSprites;

  @NonNull
  public final Switch settingsShowStates;

  @NonNull
  public final Switch settingsShowWireFrames;

  @NonNull
  public final TextView settingsSimulationDebugging;

  @NonNull
  public final TextView settingsSimulationSpeed;

  @NonNull
  public final TextView settingsStateSizeLabel;

  @NonNull
  public final LinearLayout settingsStateSizeLayout;

  @NonNull
  public final SeekBar settingsStateSizeSeekBar;

  @NonNull
  public final TextView settingsStateSizeValue;

  @NonNull
  public final Switch settingsStrictMode;

  @NonNull
  public final TextView settingsStrictModeLabel;

  @NonNull
  public final TextView settingsThreadCountLabel;

  @NonNull
  public final LinearLayout settingsThreadCountLayout;

  @NonNull
  public final SeekBar settingsThreadCountSeekBar;

  @NonNull
  public final TextView settingsThreadCountValue;

  @NonNull
  public final TextView settingsViewAutoScaleLabel;

  @NonNull
  public final TextView settingsViewTransparencyLabel;

  @NonNull
  public final LinearLayout settingsViewTransparencyLayout;

  @NonNull
  public final SeekBar settingsViewTransparencySeekBar;

  @NonNull
  public final TextView settingsViewTransparencyValue;

  private SettingsDialogFragmentBinding(@NonNull GridLayout rootView,
      @NonNull GridLayout gridLayout, @NonNull TextView settingsAnimationSpeedLabel,
      @NonNull LinearLayout settingsAnimationSpeedLayout,
      @NonNull SeekBar settingsAnimationSpeedSeekBar, @NonNull TextView settingsAnimationSpeedValue,
      @NonNull TextView settingsAppearanceGroup, @NonNull Switch settingsAutoScale,
      @NonNull Spinner settingsBeingManagerType, @NonNull TextView settingsBeingManagerTypeLabel,
      @NonNull TextView settingsBeingSizeLabel, @NonNull LinearLayout settingsBeingSizeLayout,
      @NonNull SeekBar settingsBeingSizeSeekBar, @NonNull TextView settingsBeingSizeValue,
      @NonNull Spinner settingsBeingSprite, @NonNull TextView settingsBeingsLabel,
      @NonNull LinearLayout settingsBeingsLayout, @NonNull SeekBar settingsBeingsSeekBar,
      @NonNull TextView settingsBeingsValue, @NonNull TextView settingsGazingDurationLabel,
      @NonNull LinearLayout settingsGazingDurationLayout,
      @NonNull TextView settingsGazingDurationMinValue,
      @NonNull MultiSlider settingsGazingDurationSeekBar,
      @NonNull TextView settingsGazingDurationValue, @NonNull TextView settingsIterationsLabel,
      @NonNull LinearLayout settingsIterationsLayout, @NonNull SeekBar settingsIterationsSeekBar,
      @NonNull TextView settingsIterationsValue, @NonNull Switch settingsLogging,
      @NonNull Switch settingsModelChecker, @NonNull TextView settingsModelCheckerLabel,
      @NonNull TextView settingsModelParametersGroup, @NonNull TextView settingsPalantirLabel,
      @NonNull LinearLayout settingsPalantirLayout,
      @NonNull TextView settingsPalantirManagerTypeLabel, @NonNull SeekBar settingsPalantirSeekBar,
      @NonNull TextView settingsPalantirSizeLabel, @NonNull LinearLayout settingsPalantirSizeLayout,
      @NonNull SeekBar settingsPalantirSizeSeekBar, @NonNull TextView settingsPalantirSizeValue,
      @NonNull TextView settingsPalantirValue, @NonNull Spinner settingsPalantiriManagerType,
      @NonNull TextView settingsPanel, @NonNull Switch settingsPerformanceMode,
      @NonNull TextView settingsPerformanceModeLabel, @NonNull Button settingsResetToDefaults,
      @NonNull Switch settingsSaveOnExit, @NonNull TextView settingsScalingGroup,
      @NonNull Switch settingsShowPaths, @NonNull Switch settingsShowProgress,
      @NonNull Switch settingsShowSprites, @NonNull Switch settingsShowStates,
      @NonNull Switch settingsShowWireFrames, @NonNull TextView settingsSimulationDebugging,
      @NonNull TextView settingsSimulationSpeed, @NonNull TextView settingsStateSizeLabel,
      @NonNull LinearLayout settingsStateSizeLayout, @NonNull SeekBar settingsStateSizeSeekBar,
      @NonNull TextView settingsStateSizeValue, @NonNull Switch settingsStrictMode,
      @NonNull TextView settingsStrictModeLabel, @NonNull TextView settingsThreadCountLabel,
      @NonNull LinearLayout settingsThreadCountLayout, @NonNull SeekBar settingsThreadCountSeekBar,
      @NonNull TextView settingsThreadCountValue, @NonNull TextView settingsViewAutoScaleLabel,
      @NonNull TextView settingsViewTransparencyLabel,
      @NonNull LinearLayout settingsViewTransparencyLayout,
      @NonNull SeekBar settingsViewTransparencySeekBar,
      @NonNull TextView settingsViewTransparencyValue) {
    this.rootView = rootView;
    this.gridLayout = gridLayout;
    this.settingsAnimationSpeedLabel = settingsAnimationSpeedLabel;
    this.settingsAnimationSpeedLayout = settingsAnimationSpeedLayout;
    this.settingsAnimationSpeedSeekBar = settingsAnimationSpeedSeekBar;
    this.settingsAnimationSpeedValue = settingsAnimationSpeedValue;
    this.settingsAppearanceGroup = settingsAppearanceGroup;
    this.settingsAutoScale = settingsAutoScale;
    this.settingsBeingManagerType = settingsBeingManagerType;
    this.settingsBeingManagerTypeLabel = settingsBeingManagerTypeLabel;
    this.settingsBeingSizeLabel = settingsBeingSizeLabel;
    this.settingsBeingSizeLayout = settingsBeingSizeLayout;
    this.settingsBeingSizeSeekBar = settingsBeingSizeSeekBar;
    this.settingsBeingSizeValue = settingsBeingSizeValue;
    this.settingsBeingSprite = settingsBeingSprite;
    this.settingsBeingsLabel = settingsBeingsLabel;
    this.settingsBeingsLayout = settingsBeingsLayout;
    this.settingsBeingsSeekBar = settingsBeingsSeekBar;
    this.settingsBeingsValue = settingsBeingsValue;
    this.settingsGazingDurationLabel = settingsGazingDurationLabel;
    this.settingsGazingDurationLayout = settingsGazingDurationLayout;
    this.settingsGazingDurationMinValue = settingsGazingDurationMinValue;
    this.settingsGazingDurationSeekBar = settingsGazingDurationSeekBar;
    this.settingsGazingDurationValue = settingsGazingDurationValue;
    this.settingsIterationsLabel = settingsIterationsLabel;
    this.settingsIterationsLayout = settingsIterationsLayout;
    this.settingsIterationsSeekBar = settingsIterationsSeekBar;
    this.settingsIterationsValue = settingsIterationsValue;
    this.settingsLogging = settingsLogging;
    this.settingsModelChecker = settingsModelChecker;
    this.settingsModelCheckerLabel = settingsModelCheckerLabel;
    this.settingsModelParametersGroup = settingsModelParametersGroup;
    this.settingsPalantirLabel = settingsPalantirLabel;
    this.settingsPalantirLayout = settingsPalantirLayout;
    this.settingsPalantirManagerTypeLabel = settingsPalantirManagerTypeLabel;
    this.settingsPalantirSeekBar = settingsPalantirSeekBar;
    this.settingsPalantirSizeLabel = settingsPalantirSizeLabel;
    this.settingsPalantirSizeLayout = settingsPalantirSizeLayout;
    this.settingsPalantirSizeSeekBar = settingsPalantirSizeSeekBar;
    this.settingsPalantirSizeValue = settingsPalantirSizeValue;
    this.settingsPalantirValue = settingsPalantirValue;
    this.settingsPalantiriManagerType = settingsPalantiriManagerType;
    this.settingsPanel = settingsPanel;
    this.settingsPerformanceMode = settingsPerformanceMode;
    this.settingsPerformanceModeLabel = settingsPerformanceModeLabel;
    this.settingsResetToDefaults = settingsResetToDefaults;
    this.settingsSaveOnExit = settingsSaveOnExit;
    this.settingsScalingGroup = settingsScalingGroup;
    this.settingsShowPaths = settingsShowPaths;
    this.settingsShowProgress = settingsShowProgress;
    this.settingsShowSprites = settingsShowSprites;
    this.settingsShowStates = settingsShowStates;
    this.settingsShowWireFrames = settingsShowWireFrames;
    this.settingsSimulationDebugging = settingsSimulationDebugging;
    this.settingsSimulationSpeed = settingsSimulationSpeed;
    this.settingsStateSizeLabel = settingsStateSizeLabel;
    this.settingsStateSizeLayout = settingsStateSizeLayout;
    this.settingsStateSizeSeekBar = settingsStateSizeSeekBar;
    this.settingsStateSizeValue = settingsStateSizeValue;
    this.settingsStrictMode = settingsStrictMode;
    this.settingsStrictModeLabel = settingsStrictModeLabel;
    this.settingsThreadCountLabel = settingsThreadCountLabel;
    this.settingsThreadCountLayout = settingsThreadCountLayout;
    this.settingsThreadCountSeekBar = settingsThreadCountSeekBar;
    this.settingsThreadCountValue = settingsThreadCountValue;
    this.settingsViewAutoScaleLabel = settingsViewAutoScaleLabel;
    this.settingsViewTransparencyLabel = settingsViewTransparencyLabel;
    this.settingsViewTransparencyLayout = settingsViewTransparencyLayout;
    this.settingsViewTransparencySeekBar = settingsViewTransparencySeekBar;
    this.settingsViewTransparencyValue = settingsViewTransparencyValue;
  }

  @Override
  @NonNull
  public GridLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static SettingsDialogFragmentBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static SettingsDialogFragmentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.settings_dialog_fragment, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static SettingsDialogFragmentBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      GridLayout gridLayout = (GridLayout) rootView;

      id = R.id.settingsAnimationSpeedLabel;
      TextView settingsAnimationSpeedLabel = ViewBindings.findChildViewById(rootView, id);
      if (settingsAnimationSpeedLabel == null) {
        break missingId;
      }

      id = R.id.settingsAnimationSpeedLayout;
      LinearLayout settingsAnimationSpeedLayout = ViewBindings.findChildViewById(rootView, id);
      if (settingsAnimationSpeedLayout == null) {
        break missingId;
      }

      id = R.id.settingsAnimationSpeedSeekBar;
      SeekBar settingsAnimationSpeedSeekBar = ViewBindings.findChildViewById(rootView, id);
      if (settingsAnimationSpeedSeekBar == null) {
        break missingId;
      }

      id = R.id.settingsAnimationSpeedValue;
      TextView settingsAnimationSpeedValue = ViewBindings.findChildViewById(rootView, id);
      if (settingsAnimationSpeedValue == null) {
        break missingId;
      }

      id = R.id.settingsAppearanceGroup;
      TextView settingsAppearanceGroup = ViewBindings.findChildViewById(rootView, id);
      if (settingsAppearanceGroup == null) {
        break missingId;
      }

      id = R.id.settingsAutoScale;
      Switch settingsAutoScale = ViewBindings.findChildViewById(rootView, id);
      if (settingsAutoScale == null) {
        break missingId;
      }

      id = R.id.settingsBeingManagerType;
      Spinner settingsBeingManagerType = ViewBindings.findChildViewById(rootView, id);
      if (settingsBeingManagerType == null) {
        break missingId;
      }

      id = R.id.settingsBeingManagerTypeLabel;
      TextView settingsBeingManagerTypeLabel = ViewBindings.findChildViewById(rootView, id);
      if (settingsBeingManagerTypeLabel == null) {
        break missingId;
      }

      id = R.id.settingsBeingSizeLabel;
      TextView settingsBeingSizeLabel = ViewBindings.findChildViewById(rootView, id);
      if (settingsBeingSizeLabel == null) {
        break missingId;
      }

      id = R.id.settingsBeingSizeLayout;
      LinearLayout settingsBeingSizeLayout = ViewBindings.findChildViewById(rootView, id);
      if (settingsBeingSizeLayout == null) {
        break missingId;
      }

      id = R.id.settingsBeingSizeSeekBar;
      SeekBar settingsBeingSizeSeekBar = ViewBindings.findChildViewById(rootView, id);
      if (settingsBeingSizeSeekBar == null) {
        break missingId;
      }

      id = R.id.settingsBeingSizeValue;
      TextView settingsBeingSizeValue = ViewBindings.findChildViewById(rootView, id);
      if (settingsBeingSizeValue == null) {
        break missingId;
      }

      id = R.id.settingsBeingSprite;
      Spinner settingsBeingSprite = ViewBindings.findChildViewById(rootView, id);
      if (settingsBeingSprite == null) {
        break missingId;
      }

      id = R.id.settingsBeingsLabel;
      TextView settingsBeingsLabel = ViewBindings.findChildViewById(rootView, id);
      if (settingsBeingsLabel == null) {
        break missingId;
      }

      id = R.id.settingsBeingsLayout;
      LinearLayout settingsBeingsLayout = ViewBindings.findChildViewById(rootView, id);
      if (settingsBeingsLayout == null) {
        break missingId;
      }

      id = R.id.settingsBeingsSeekBar;
      SeekBar settingsBeingsSeekBar = ViewBindings.findChildViewById(rootView, id);
      if (settingsBeingsSeekBar == null) {
        break missingId;
      }

      id = R.id.settingsBeingsValue;
      TextView settingsBeingsValue = ViewBindings.findChildViewById(rootView, id);
      if (settingsBeingsValue == null) {
        break missingId;
      }

      id = R.id.settingsGazingDurationLabel;
      TextView settingsGazingDurationLabel = ViewBindings.findChildViewById(rootView, id);
      if (settingsGazingDurationLabel == null) {
        break missingId;
      }

      id = R.id.settingsGazingDurationLayout;
      LinearLayout settingsGazingDurationLayout = ViewBindings.findChildViewById(rootView, id);
      if (settingsGazingDurationLayout == null) {
        break missingId;
      }

      id = R.id.settingsGazingDurationMinValue;
      TextView settingsGazingDurationMinValue = ViewBindings.findChildViewById(rootView, id);
      if (settingsGazingDurationMinValue == null) {
        break missingId;
      }

      id = R.id.settingsGazingDurationSeekBar;
      MultiSlider settingsGazingDurationSeekBar = ViewBindings.findChildViewById(rootView, id);
      if (settingsGazingDurationSeekBar == null) {
        break missingId;
      }

      id = R.id.settingsGazingDurationValue;
      TextView settingsGazingDurationValue = ViewBindings.findChildViewById(rootView, id);
      if (settingsGazingDurationValue == null) {
        break missingId;
      }

      id = R.id.settingsIterationsLabel;
      TextView settingsIterationsLabel = ViewBindings.findChildViewById(rootView, id);
      if (settingsIterationsLabel == null) {
        break missingId;
      }

      id = R.id.settingsIterationsLayout;
      LinearLayout settingsIterationsLayout = ViewBindings.findChildViewById(rootView, id);
      if (settingsIterationsLayout == null) {
        break missingId;
      }

      id = R.id.settingsIterationsSeekBar;
      SeekBar settingsIterationsSeekBar = ViewBindings.findChildViewById(rootView, id);
      if (settingsIterationsSeekBar == null) {
        break missingId;
      }

      id = R.id.settingsIterationsValue;
      TextView settingsIterationsValue = ViewBindings.findChildViewById(rootView, id);
      if (settingsIterationsValue == null) {
        break missingId;
      }

      id = R.id.settingsLogging;
      Switch settingsLogging = ViewBindings.findChildViewById(rootView, id);
      if (settingsLogging == null) {
        break missingId;
      }

      id = R.id.settingsModelChecker;
      Switch settingsModelChecker = ViewBindings.findChildViewById(rootView, id);
      if (settingsModelChecker == null) {
        break missingId;
      }

      id = R.id.settingsModelCheckerLabel;
      TextView settingsModelCheckerLabel = ViewBindings.findChildViewById(rootView, id);
      if (settingsModelCheckerLabel == null) {
        break missingId;
      }

      id = R.id.settingsModelParametersGroup;
      TextView settingsModelParametersGroup = ViewBindings.findChildViewById(rootView, id);
      if (settingsModelParametersGroup == null) {
        break missingId;
      }

      id = R.id.settingsPalantirLabel;
      TextView settingsPalantirLabel = ViewBindings.findChildViewById(rootView, id);
      if (settingsPalantirLabel == null) {
        break missingId;
      }

      id = R.id.settingsPalantirLayout;
      LinearLayout settingsPalantirLayout = ViewBindings.findChildViewById(rootView, id);
      if (settingsPalantirLayout == null) {
        break missingId;
      }

      id = R.id.settingsPalantirManagerTypeLabel;
      TextView settingsPalantirManagerTypeLabel = ViewBindings.findChildViewById(rootView, id);
      if (settingsPalantirManagerTypeLabel == null) {
        break missingId;
      }

      id = R.id.settingsPalantirSeekBar;
      SeekBar settingsPalantirSeekBar = ViewBindings.findChildViewById(rootView, id);
      if (settingsPalantirSeekBar == null) {
        break missingId;
      }

      id = R.id.settingsPalantirSizeLabel;
      TextView settingsPalantirSizeLabel = ViewBindings.findChildViewById(rootView, id);
      if (settingsPalantirSizeLabel == null) {
        break missingId;
      }

      id = R.id.settingsPalantirSizeLayout;
      LinearLayout settingsPalantirSizeLayout = ViewBindings.findChildViewById(rootView, id);
      if (settingsPalantirSizeLayout == null) {
        break missingId;
      }

      id = R.id.settingsPalantirSizeSeekBar;
      SeekBar settingsPalantirSizeSeekBar = ViewBindings.findChildViewById(rootView, id);
      if (settingsPalantirSizeSeekBar == null) {
        break missingId;
      }

      id = R.id.settingsPalantirSizeValue;
      TextView settingsPalantirSizeValue = ViewBindings.findChildViewById(rootView, id);
      if (settingsPalantirSizeValue == null) {
        break missingId;
      }

      id = R.id.settingsPalantirValue;
      TextView settingsPalantirValue = ViewBindings.findChildViewById(rootView, id);
      if (settingsPalantirValue == null) {
        break missingId;
      }

      id = R.id.settingsPalantiriManagerType;
      Spinner settingsPalantiriManagerType = ViewBindings.findChildViewById(rootView, id);
      if (settingsPalantiriManagerType == null) {
        break missingId;
      }

      id = R.id.settingsPanel;
      TextView settingsPanel = ViewBindings.findChildViewById(rootView, id);
      if (settingsPanel == null) {
        break missingId;
      }

      id = R.id.settingsPerformanceMode;
      Switch settingsPerformanceMode = ViewBindings.findChildViewById(rootView, id);
      if (settingsPerformanceMode == null) {
        break missingId;
      }

      id = R.id.settingsPerformanceModeLabel;
      TextView settingsPerformanceModeLabel = ViewBindings.findChildViewById(rootView, id);
      if (settingsPerformanceModeLabel == null) {
        break missingId;
      }

      id = R.id.settingsResetToDefaults;
      Button settingsResetToDefaults = ViewBindings.findChildViewById(rootView, id);
      if (settingsResetToDefaults == null) {
        break missingId;
      }

      id = R.id.settingsSaveOnExit;
      Switch settingsSaveOnExit = ViewBindings.findChildViewById(rootView, id);
      if (settingsSaveOnExit == null) {
        break missingId;
      }

      id = R.id.settingsScalingGroup;
      TextView settingsScalingGroup = ViewBindings.findChildViewById(rootView, id);
      if (settingsScalingGroup == null) {
        break missingId;
      }

      id = R.id.settingsShowPaths;
      Switch settingsShowPaths = ViewBindings.findChildViewById(rootView, id);
      if (settingsShowPaths == null) {
        break missingId;
      }

      id = R.id.settingsShowProgress;
      Switch settingsShowProgress = ViewBindings.findChildViewById(rootView, id);
      if (settingsShowProgress == null) {
        break missingId;
      }

      id = R.id.settingsShowSprites;
      Switch settingsShowSprites = ViewBindings.findChildViewById(rootView, id);
      if (settingsShowSprites == null) {
        break missingId;
      }

      id = R.id.settingsShowStates;
      Switch settingsShowStates = ViewBindings.findChildViewById(rootView, id);
      if (settingsShowStates == null) {
        break missingId;
      }

      id = R.id.settingsShowWireFrames;
      Switch settingsShowWireFrames = ViewBindings.findChildViewById(rootView, id);
      if (settingsShowWireFrames == null) {
        break missingId;
      }

      id = R.id.settingsSimulationDebugging;
      TextView settingsSimulationDebugging = ViewBindings.findChildViewById(rootView, id);
      if (settingsSimulationDebugging == null) {
        break missingId;
      }

      id = R.id.settingsSimulationSpeed;
      TextView settingsSimulationSpeed = ViewBindings.findChildViewById(rootView, id);
      if (settingsSimulationSpeed == null) {
        break missingId;
      }

      id = R.id.settingsStateSizeLabel;
      TextView settingsStateSizeLabel = ViewBindings.findChildViewById(rootView, id);
      if (settingsStateSizeLabel == null) {
        break missingId;
      }

      id = R.id.settingsStateSizeLayout;
      LinearLayout settingsStateSizeLayout = ViewBindings.findChildViewById(rootView, id);
      if (settingsStateSizeLayout == null) {
        break missingId;
      }

      id = R.id.settingsStateSizeSeekBar;
      SeekBar settingsStateSizeSeekBar = ViewBindings.findChildViewById(rootView, id);
      if (settingsStateSizeSeekBar == null) {
        break missingId;
      }

      id = R.id.settingsStateSizeValue;
      TextView settingsStateSizeValue = ViewBindings.findChildViewById(rootView, id);
      if (settingsStateSizeValue == null) {
        break missingId;
      }

      id = R.id.settingsStrictMode;
      Switch settingsStrictMode = ViewBindings.findChildViewById(rootView, id);
      if (settingsStrictMode == null) {
        break missingId;
      }

      id = R.id.settingsStrictModeLabel;
      TextView settingsStrictModeLabel = ViewBindings.findChildViewById(rootView, id);
      if (settingsStrictModeLabel == null) {
        break missingId;
      }

      id = R.id.settingsThreadCountLabel;
      TextView settingsThreadCountLabel = ViewBindings.findChildViewById(rootView, id);
      if (settingsThreadCountLabel == null) {
        break missingId;
      }

      id = R.id.settingsThreadCountLayout;
      LinearLayout settingsThreadCountLayout = ViewBindings.findChildViewById(rootView, id);
      if (settingsThreadCountLayout == null) {
        break missingId;
      }

      id = R.id.settingsThreadCountSeekBar;
      SeekBar settingsThreadCountSeekBar = ViewBindings.findChildViewById(rootView, id);
      if (settingsThreadCountSeekBar == null) {
        break missingId;
      }

      id = R.id.settingsThreadCountValue;
      TextView settingsThreadCountValue = ViewBindings.findChildViewById(rootView, id);
      if (settingsThreadCountValue == null) {
        break missingId;
      }

      id = R.id.settingsViewAutoScaleLabel;
      TextView settingsViewAutoScaleLabel = ViewBindings.findChildViewById(rootView, id);
      if (settingsViewAutoScaleLabel == null) {
        break missingId;
      }

      id = R.id.settingsViewTransparencyLabel;
      TextView settingsViewTransparencyLabel = ViewBindings.findChildViewById(rootView, id);
      if (settingsViewTransparencyLabel == null) {
        break missingId;
      }

      id = R.id.settingsViewTransparencyLayout;
      LinearLayout settingsViewTransparencyLayout = ViewBindings.findChildViewById(rootView, id);
      if (settingsViewTransparencyLayout == null) {
        break missingId;
      }

      id = R.id.settingsViewTransparencySeekBar;
      SeekBar settingsViewTransparencySeekBar = ViewBindings.findChildViewById(rootView, id);
      if (settingsViewTransparencySeekBar == null) {
        break missingId;
      }

      id = R.id.settingsViewTransparencyValue;
      TextView settingsViewTransparencyValue = ViewBindings.findChildViewById(rootView, id);
      if (settingsViewTransparencyValue == null) {
        break missingId;
      }

      return new SettingsDialogFragmentBinding((GridLayout) rootView, gridLayout,
          settingsAnimationSpeedLabel, settingsAnimationSpeedLayout, settingsAnimationSpeedSeekBar,
          settingsAnimationSpeedValue, settingsAppearanceGroup, settingsAutoScale,
          settingsBeingManagerType, settingsBeingManagerTypeLabel, settingsBeingSizeLabel,
          settingsBeingSizeLayout, settingsBeingSizeSeekBar, settingsBeingSizeValue,
          settingsBeingSprite, settingsBeingsLabel, settingsBeingsLayout, settingsBeingsSeekBar,
          settingsBeingsValue, settingsGazingDurationLabel, settingsGazingDurationLayout,
          settingsGazingDurationMinValue, settingsGazingDurationSeekBar,
          settingsGazingDurationValue, settingsIterationsLabel, settingsIterationsLayout,
          settingsIterationsSeekBar, settingsIterationsValue, settingsLogging, settingsModelChecker,
          settingsModelCheckerLabel, settingsModelParametersGroup, settingsPalantirLabel,
          settingsPalantirLayout, settingsPalantirManagerTypeLabel, settingsPalantirSeekBar,
          settingsPalantirSizeLabel, settingsPalantirSizeLayout, settingsPalantirSizeSeekBar,
          settingsPalantirSizeValue, settingsPalantirValue, settingsPalantiriManagerType,
          settingsPanel, settingsPerformanceMode, settingsPerformanceModeLabel,
          settingsResetToDefaults, settingsSaveOnExit, settingsScalingGroup, settingsShowPaths,
          settingsShowProgress, settingsShowSprites, settingsShowStates, settingsShowWireFrames,
          settingsSimulationDebugging, settingsSimulationSpeed, settingsStateSizeLabel,
          settingsStateSizeLayout, settingsStateSizeSeekBar, settingsStateSizeValue,
          settingsStrictMode, settingsStrictModeLabel, settingsThreadCountLabel,
          settingsThreadCountLayout, settingsThreadCountSeekBar, settingsThreadCountValue,
          settingsViewAutoScaleLabel, settingsViewTransparencyLabel, settingsViewTransparencyLayout,
          settingsViewTransparencySeekBar, settingsViewTransparencyValue);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
