// Generated by view binder compiler. Do not edit!
package edu.vandy.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import edu.vandy.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ToolbarBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final TextView beingsLabel;

  @NonNull
  public final TextView beingsValue;

  @NonNull
  public final TextView completedIterationsLabel;

  @NonNull
  public final TextView completedIterationsValue;

  @NonNull
  public final TextView iterationsLabel;

  @NonNull
  public final TextView iterationsValue;

  @NonNull
  public final TextView palantiriLabel;

  @NonNull
  public final TextView palantiriValue;

  @NonNull
  public final TextView threadsLabel;

  @NonNull
  public final TextView threadsValue;

  @NonNull
  public final RelativeLayout trackerLayout;

  private ToolbarBinding(@NonNull RelativeLayout rootView, @NonNull TextView beingsLabel,
      @NonNull TextView beingsValue, @NonNull TextView completedIterationsLabel,
      @NonNull TextView completedIterationsValue, @NonNull TextView iterationsLabel,
      @NonNull TextView iterationsValue, @NonNull TextView palantiriLabel,
      @NonNull TextView palantiriValue, @NonNull TextView threadsLabel,
      @NonNull TextView threadsValue, @NonNull RelativeLayout trackerLayout) {
    this.rootView = rootView;
    this.beingsLabel = beingsLabel;
    this.beingsValue = beingsValue;
    this.completedIterationsLabel = completedIterationsLabel;
    this.completedIterationsValue = completedIterationsValue;
    this.iterationsLabel = iterationsLabel;
    this.iterationsValue = iterationsValue;
    this.palantiriLabel = palantiriLabel;
    this.palantiriValue = palantiriValue;
    this.threadsLabel = threadsLabel;
    this.threadsValue = threadsValue;
    this.trackerLayout = trackerLayout;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ToolbarBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ToolbarBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup parent,
      boolean attachToParent) {
    View root = inflater.inflate(R.layout.toolbar, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ToolbarBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.beingsLabel;
      TextView beingsLabel = ViewBindings.findChildViewById(rootView, id);
      if (beingsLabel == null) {
        break missingId;
      }

      id = R.id.beingsValue;
      TextView beingsValue = ViewBindings.findChildViewById(rootView, id);
      if (beingsValue == null) {
        break missingId;
      }

      id = R.id.completedIterationsLabel;
      TextView completedIterationsLabel = ViewBindings.findChildViewById(rootView, id);
      if (completedIterationsLabel == null) {
        break missingId;
      }

      id = R.id.completedIterationsValue;
      TextView completedIterationsValue = ViewBindings.findChildViewById(rootView, id);
      if (completedIterationsValue == null) {
        break missingId;
      }

      id = R.id.iterationsLabel;
      TextView iterationsLabel = ViewBindings.findChildViewById(rootView, id);
      if (iterationsLabel == null) {
        break missingId;
      }

      id = R.id.iterationsValue;
      TextView iterationsValue = ViewBindings.findChildViewById(rootView, id);
      if (iterationsValue == null) {
        break missingId;
      }

      id = R.id.palantiriLabel;
      TextView palantiriLabel = ViewBindings.findChildViewById(rootView, id);
      if (palantiriLabel == null) {
        break missingId;
      }

      id = R.id.palantiriValue;
      TextView palantiriValue = ViewBindings.findChildViewById(rootView, id);
      if (palantiriValue == null) {
        break missingId;
      }

      id = R.id.threadsLabel;
      TextView threadsLabel = ViewBindings.findChildViewById(rootView, id);
      if (threadsLabel == null) {
        break missingId;
      }

      id = R.id.threadsValue;
      TextView threadsValue = ViewBindings.findChildViewById(rootView, id);
      if (threadsValue == null) {
        break missingId;
      }

      RelativeLayout trackerLayout = (RelativeLayout) rootView;

      return new ToolbarBinding((RelativeLayout) rootView, beingsLabel, beingsValue,
          completedIterationsLabel, completedIterationsValue, iterationsLabel, iterationsValue,
          palantiriLabel, palantiriValue, threadsLabel, threadsValue, trackerLayout);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
